#!/usr/bin/env bash

readonly name='env'
readonly repo="github.com/vvanpo/$name"
readonly default_prefix='~/.local'
export PREFIX

# Sets the `$PREFIX` variable.
function set-prefix {
    echo -n "Local installation hierarchy [$default_prefix]: "
    read PREFIX
    PREFIX="${PREFIX:-$default_prefix}"
    # Perform tilde expansion as it won't be expanded automatically in a quoted
    # string.
    PREFIX="${PREFIX/#~/$HOME}"
    # Resolve path.
    PREFIX="$(realpath -ms "$PREFIX")"
}

function config-file {
    if [[ -f $PREFIX/etc/$name/config ]]; then
        echo "$PREFIX/etc/$name/config"
    else
        echo "$PREFIX/src/$repo/default.config"
    fi
}

function get-config {
    git config -f "$(config-file)" --get "$1"
}

function set-config {
    if [[ -f $PREFIX/etc/$name/config ]]; then
        mkdir -p "$PREFIX/etc/$name"
        cp "$PREFIX/src/$repo/default.config" "$PREFIX/etc/$name/config"
    fi

    git config -f "$(config-file)" --add "$1" "$2"
}

# Reads an input value if the requested config value isn't set.
function read-config {
    if [[ -z $(git config -f "$(config-file)" --name-only -l | grep -E "^$1$") ]]; then
        local value
        printf '%s%s%s' "$2" "${3:+ [$3]}" ': '
        read value
        value="${value:-$3}"
        set-config "$1" "$value"
    fi
}

# Pull down the repo, cloning it if it doesn't exist.
function pull-repo {
    local path="$PREFIX/src/$repo"

    if [[ -d $path/.git ]]; then
        local remote=$(git -C "$path" config --get remote.origin.url | grep "$repo")
        if [[ -z $remote ]]; then
            2>&1 echo 'The repository exists, but does not point to the correct origin.'
            exit 1
        fi

        git -C "$path" checkout -q master
        git -C "$path" pull
    else
        (set -x; git clone "https://$repo.git" "$path")
    fi
}

function install-deps {
    if [[ $(uname) == 'Darwin' ]]; then
        if [[ -z $(which brew) ]]; then
            /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
            (set -x; brew install git)
            # Needed for `realpath`
            (set -x; brew install coreutils)
        fi
    fi
}

install-deps
set-prefix
pull-repo
. "$PREFIX/src/$repo/install.bash"
