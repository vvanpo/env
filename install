#!/usr/bin/env bash

# Installs dot-files and other initialization/configuration scripts/files into
# various places in the home directory.
# Depends on NAME, REPO, and PREFIX environment variables.

src=${PREFIX}/src/${REPO}
etc=${PREFIX}/etc/${NAME}
lib=${PREFIX}/lib/${NAME}

. "${src}/config.bash"

function install-file {
	if [[ -e $2 ]] && [[ ! -d $2 ]]; then
		rm -f "$2"
	elif [[ ${2%%/} != $2 ]]; then
		mkdir -p "$2"
	else
		mkdir -p "$(dirname "$2")"
	fi

	(set -x; cp "$1" "$2")
}

function install-url {(
	cd "$2"

	local cmd="$(eval "echo $1")"
	echo "+ curl -fsSLO $cmd"
	curl -fsSLO "$cmd"
)}

function install-includes {(
	# Non-absolute paths are relative to the repository.
	cd "$src"

	local files urls

	IFS=$'\n' read -a files -d '' <<< "$(config --get-all "includes.$1.file")"
	for file in "${files[@]}"; do
		install-file "$file" "$2/"
	done

	IFS=$'\n' read -a urls -d '' <<< "$(config --get-all "includes.$1.url")"
	for url in "${urls[@]}"; do
		install-url "$url" "$2/"
	done
)}

function install-git {
	rm -f ~/.gitconfig
	git config --global --add user.name "$(config --get user.name)"
	git config --global --add user.email "$(config --get user.email)"
	git config --global --add core.excludesfile "${etc}/gitignore"
}

function install-bash {
	# Include scripts need knowledge of the folder hierarchy.
	for var in NAME REPO PREFIX; do
		echo "readonly ${var}=${!var}" >> ~/.bashrc
	done
	echo -e 'export NAME REPO PREFIX\n' >> ~/.bashrc

	# Install include scripts and source them.
	install-includes bash "$lib"
	for file in $(config --get-all includes.bash.file); do
		echo ". ${lib}/${file}" >> ~/.bashrc
	done
}

request-config 'user.name' 'Full name'
request-config 'user.email' 'E-mail'

install-includes '~' ~
install-includes etc "$etc"
install-bash
install-git
